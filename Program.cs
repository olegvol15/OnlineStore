using Microsoft.AspNetCore.Authentication.Cookies;
using Microsoft.EntityFrameworkCore;
using OnlineStore.Models;
using OnlineStore.Services;

var builder = WebApplication.CreateBuilder(args);

// üîß 1. –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));
// –∞–±–æ:
// options.UseSqlServer(...); // –Ø–∫—â–æ SQL Server

// üîß 2. MVC + —Å–µ—Å—ñ—è + –∫—É–∫–∏-–∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è
builder.Services.AddControllersWithViews();
builder.Services.AddSession();
builder.Services.AddHttpContextAccessor();

builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/Account/Login";
        options.AccessDeniedPath = "/Account/AccessDenied";
    });

builder.Services.AddAuthorization();

// üîß 3. DI-—Å–µ—Ä–≤—ñ—Å–∏
builder.Services.AddScoped<CartService>();
builder.Services.AddSingleton<ReviewService>();

var app = builder.Build();

// üß± Middleware
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

app.UseHttpsRedirection();
app.UseStaticFiles();
app.UseRouting();

app.UseSession();
app.UseAuthentication();
app.UseAuthorization();

// üìç Route
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}"
);

app.Run();

