using Microsoft.AspNetCore.Authentication.Cookies;
using Microsoft.EntityFrameworkCore;
using OnlineStore.Models;
using OnlineStore.Services;

var builder = WebApplication.CreateBuilder(args);

// üîß 1. –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseSqlite(builder.Configuration.GetConnectionString("DefaultConnection")));
// –∞–±–æ:
// options.UseSqlServer(...); // –Ø–∫—â–æ SQL Server

// üîß 2. MVC + —Å–µ—Å—ñ—è + –∫—É–∫–∏-–∞–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è
builder.Services.AddControllersWithViews();
builder.Services.AddSession();
builder.Services.AddHttpContextAccessor();

builder.Services.AddAuthentication(CookieAuthenticationDefaults.AuthenticationScheme)
    .AddCookie(options =>
    {
        options.LoginPath = "/Account/Login";
        options.AccessDeniedPath = "/Account/AccessDenied";
    });

builder.Services.AddAuthorization();

// üîß 3. DI-—Å–µ—Ä–≤—ñ—Å–∏
builder.Services.AddScoped<CartService>();
builder.Services.AddSingleton<ReviewService>();
builder.Services.AddScoped<DataAccessor>();


var app = builder.Build();

// üß± Middleware
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

app.UseHttpsRedirection();
app.UseStaticFiles();
app.UseRouting();

app.UseSession();
app.UseAuthentication();
app.UseAuthorization();

// üìç Route
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Home}/{action=Index}/{id?}"
);

using (var scope = app.Services.CreateScope())
{
    var context = scope.ServiceProvider.GetRequiredService<AppDbContext>();

    if (!context.Categories.Any())
    {
        context.Categories.AddRange(
            new Category { Name = "–Ü–≥—Ä–∞—à–∫–∏", ImageUrl = "toys.jpg" },
            new Category { Name = "–ö–∞–Ω—Ü–µ–ª—è—Ä—ñ—è", ImageUrl = "office.jpeg" },
            new Category { Name = "–ö–æ—Å–º–µ—Ç–∏–∫–∞", ImageUrl = "beauty.jpg" },
            new Category { Name = "–ü—Ä–æ–¥—É–∫—Ç–∏", ImageUrl = "food.jpg" },
            new Category { Name = "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞", ImageUrl = "electronics.jpg" }
        );
        context.SaveChanges();
    }
}


app.Run();

